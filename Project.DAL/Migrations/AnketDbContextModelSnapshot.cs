// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL.ContextClasses;

namespace Project.DAL.Migrations
{
    [DbContext(typeof(AnketDbContext))]
    partial class AnketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.ENTITIES.Anket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("PersonelYorumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoruTipi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ankets");
                });

            modelBuilder.Entity("Project.ENTITIES.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnketId")
                        .HasColumnType("int");

                    b.Property<string>("DogumTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SirketId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatuId")
                        .HasColumnType("int");

                    b.Property<int>("Tel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnketId");

                    b.HasIndex("SirketId");

                    b.HasIndex("StatuId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("Project.ENTITIES.Sirket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnketId")
                        .HasColumnType("int");

                    b.Property<string>("Departman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sektor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnketId");

                    b.ToTable("Sirkets");
                });

            modelBuilder.Entity("Project.ENTITIES.Statu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnketId")
                        .HasColumnType("int");

                    b.Property<string>("StatuTipi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnketId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Project.ENTITIES.Personel", b =>
                {
                    b.HasOne("Project.ENTITIES.Anket", "Ankets")
                        .WithMany()
                        .HasForeignKey("AnketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.ENTITIES.Sirket", null)
                        .WithMany("Personels")
                        .HasForeignKey("SirketId");

                    b.HasOne("Project.ENTITIES.Statu", null)
                        .WithMany("Personels")
                        .HasForeignKey("StatuId");

                    b.Navigation("Ankets");
                });

            modelBuilder.Entity("Project.ENTITIES.Sirket", b =>
                {
                    b.HasOne("Project.ENTITIES.Anket", "Ankets")
                        .WithMany()
                        .HasForeignKey("AnketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ankets");
                });

            modelBuilder.Entity("Project.ENTITIES.Statu", b =>
                {
                    b.HasOne("Project.ENTITIES.Anket", "Ankets")
                        .WithMany()
                        .HasForeignKey("AnketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ankets");
                });

            modelBuilder.Entity("Project.ENTITIES.Sirket", b =>
                {
                    b.Navigation("Personels");
                });

            modelBuilder.Entity("Project.ENTITIES.Statu", b =>
                {
                    b.Navigation("Personels");
                });
#pragma warning restore 612, 618
        }
    }
}
